/******************************************************************************
Tema: SISTEMA DE MONITORAMENTO E ANÁLISE DE PRODUÇÃO INDUSTRIAL
Desenvolver um software em linguagem C capaz de monitorar, registrar, simular e analisar dados de produção em uma linha de manufatura. O sistema deverá armazenar dados de produção por máquina, calcular métricas de eficiência e permitir análises a partir de um menu interativo.

Especificações obrigatórias:
1.O programa deverá conter pelo menos uma estrutura (struct), por exemplo:
struct Maquina {
    int id;        // identificação da peça
    char des[50];  // descrição
    float qtd;     // quantidade
    float vun;     // valor unitário
    float vto;     // valor total
};

2.O programa deverá possuir um Menu de Opções, como:

========= MENU PRINCIPAL =========
1. Cadastrar peça
2. Listar estoque
3. Pesquisar peça
4. Excluir peça
5. Sair
==================================

3.O programa deverá conter, no mínimo, quatro funções chamadas a partir do menu:
void Cadastrar(...)
void Listar(...)
void Pesquisar(...)
void Excluir(...)

4.Uma das funções (por exemplo, Listar) deverá ser obrigatoriamente escrita após a função main(). As demais podem ser escritas antes da main().
Funcionalidades detalhadas:
- Cadastrar: entrada de dados de identificação, quantidade e valor unitário.
- Listar: imprimir na tela todas as peças do estoque.
- Pesquisar: procurar pela existencia de uma peça, pela sua identificação.
- Excluir: retirar do cadastro uma peça, dada sua identificação.
Critérios Técnicos:
- Uso avançado de struct e vetores de estruturas.
- Boas práticas com modularização (uso de funções).
- Gerenciamento correto de entrada/saída.
- Robustez com tratamento de erros.
*******************************************************************************/
// O ponteiro indica a localização duma variável na memória, é como um endereço



#include <stdio.h>
#include <string.h>

typedef struct {
char nome [100];
long int id;
int qtd;
float vun;
} cadastro;

int tam = 0; // Quantidade de peças que eu já foram cadastradas.

void listar (cadastro cad[]){
        for (int i = 0; i < tam; i++){
            printf ("\nID peça: %li", cad[i].id); //Os "ID's" não podem ser iguais.
            printf ("\nNome: %s", cad[i].nome);
            printf ("\nQuantidade: %d", cad[i].qtd);
            printf ("\nValor unitário: %2f\n", cad [i].vun);
            }
            if (tam == 0) printf ("Nenhuma peça cadastrada no sistema.\n");
        }    


void pesquisar (cadastro cad[]){
int temp;
        
        if (tam == 0) 
            printf ("Nenhuma peça cadastrada no sistema.\n");
        if (tam > 0) {printf ("Pesquise por uma peça inserindo seu ID: ");
        scanf ("%d", &temp);
        for (int i = 0; i < tam; i++){
            if (tam > 0)
                if (cad[i].id == temp)
                {
                printf ("Nome: %s", cad[i].nome);
                printf ("\nQuantidade: %d", cad[i].qtd);
                printf ("\nValor unitário: %2f\n", cad [i].vun);
                }
                if (cad[i].id != temp) printf ("Peça não encontrada no estoque ou inexistente.\n");
        }
        }
}

void excluir (cadastro cad[]){
long int temp;
int flag = 0;

        if (tam == 0) 
        {
        printf ("Nenhuma peça cadastrada cadastrada no sistema.\n");
        }
        if (tam > 0) printf ("Insira o ID da peça que você deseja excluir: ");
        scanf ("%li", &temp);
        
        for (int i = 0; i < tam; i++){
            if (cad[i].id == temp)
            {for (int j = i; j < tam - 1; j++)
                {
                cad[j] = cad[j + 1];
                }
                tam--;
                printf ("Peça exluída!\n");
                flag = 1;
            }
        }if (flag == 0) printf ("Peça não encontrada ou já excluída.\n");
       
}

int main()
{
int E;
cadastro cad [100]; // cad é o nome do vetor


                    
                    do
                    {
                        printf ("\n========= MENU PRINCIPAL =========\n1. Cadastrar peça\n2. Listar estoque\n3. Pesquisar peça\n4. Excluir peça\n5. Sair\n==================================\n");
                        scanf ("%d", &E);
                        switch (E){
                            case 1:
                                if (tam > 100) printf ("O estoque não comporta mais que 100 peças.");
                                else{
                                    printf ("Insira o nome da peça: ");
                                    scanf ("%s", cad[tam].nome);
                                    printf ("Insira o ID da peça: ");
                                    scanf ("%li", &cad[tam].id);
                                    printf ("Insira o número de peças: ");
                                    scanf ("%i", &cad[tam].qtd);
                                    printf ("Insira o valor unitário: ");
                                    scanf ("%f", &cad[tam].vun);
                                    tam++;
                                    }
                                break;
                            case 2:
                                listar (cad);
                                break;
                            case 3: 
                                pesquisar (cad);
                                break;
                            case 4:
                                excluir (cad);
                                break;
                        } 
                    }
                    while (E != 5 & E > 0 & E < 5);
                    if (E == 5) printf ("Programa finalizado.");
return 0;
}
